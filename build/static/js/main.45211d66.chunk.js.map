{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","kittens.js","App.js","serviceWorker.js","index.js"],"names":["Card","_ref","name","userid","id","insta","react_default","a","createElement","className","href","rel","target","alt","src","concat","CardList","kittens","Cardcc","map","user","i","src_Card","key","SearchBox","searchfield","ChangeSearch","type","placeholder","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ChangeOnSearch","event","setState","value","state","_this2","filteredkittens","filter","toLowerCase","includes","src_SearchBox","src_CardList","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.45211d66.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, userid ,id, insta}) =>{\r\n\treturn(\r\n\t <div className='tc bg-pink dib br3 ma2 pa3 grow bw2 shadow-5'>\r\n\t \t<a href={insta}\r\n\t \trel=\"noopener noreferrer\" \r\n\t \t target=\"_blank\">\r\n\t    <img alt='kittens' src={`https://robohash.org/${id+2}.png?set=set4&size=200x200`}/>\r\n\t\t<div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{userid}</p>\r\n\t\t</div>\r\n\t\t</a>\r\n\t </div>\r\n\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({kittens}) =>\r\n{\r\n\tconst Cardcc=kittens.map((user,i)=>{\r\n\t\treturn\t<Card key={i} \r\n\t\t\t\t\t  id={kittens[i].id} \r\n\t\t\t\t\t  name={kittens[i].name} \r\n\t\t\t\t\t  userid={kittens[i].userid} \r\n\t\t\t\t\t  insta={kittens[i].insta}\r\n\t\t\t\t\t/>\r\n\t} )\r\n\treturn(\r\n\t\t<div>\r\n\t\t{Cardcc}\r\n\t\t</div>\t\r\n\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchfield,ChangeSearch})=>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t<input \r\n\t\tclassName='pa3 bg-washed-red b--purple ba'\r\n\t\ttype='search'\r\n\t\tplaceholder='Search Kittens' \r\n\t\tonChange={ ChangeSearch }\r\n\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","export const kittens=[\r\n{\r\n\tid:1,\r\n\tname:`Ananya Srivastava`,\r\n\tuserid:'@ananyavsrivastava',\r\n\tinsta:`https://www.instagram.com/ananyavsrivastava/?hl=en`\r\n},\r\n{\r\n\tid:2,\r\n\tname:`Anushka Sharma`,\r\n\tuserid:'@anushkasharma0804',\r\n\tinsta:`https://www.instagram.com/anushkasharma0804/?hl=en`\r\n},\r\n{\r\n\tid:3,\r\n\tname:`Akanksha Singh`,\r\n\tuserid:'@akanksha5598',\r\n\tinsta:`https://www.instagram.com/akanksha5598/?hl=en`\r\n},\r\n{\r\n\tid:4,\r\n\tname:`Prachi Rawat`,\r\n\tuserid:'@prachi7101',\r\n\tinsta:`#`\r\n},\r\n{\r\n\tid:5,\r\n\tname:`Manasvi Sharma`,\r\n\tuserid:'@annabelledoll05',\r\n\tinsta:`https://www.instagram.com/annabelledoll05/?hl=en`\r\n},\r\n{\r\n\tid:6,\r\n\tname:`Niharika Mallick`,\r\n\tuserid:'@niharika.mallick.1',\r\n\tinsta:`https://www.instagram.com/niharika.mallick.1/?hl=en`\r\n},\r\n{\r\n\tid:7,\r\n\tname:`Spriha Sharma`,\r\n\tuserid:'@spriha234',\r\n\tinsta:`https://www.instagram.com/spriha234/?hl=en`\r\n},\r\n{\r\n\tid:8,\r\n\tname:`Ritika Jain`,\r\n\tuserid:'@ritika__.jain__',\r\n\tinsta:`https://www.instagram.com/ritika__.jain__/?hl=en`\r\n},\r\n{\r\n\tid:9,\r\n\tname:`Shilpi Tyagi`,\r\n\tuserid:'@_shilpi_797',\r\n\tinsta:`https://www.instagram.com/_shilpi_797/?hl=en`\r\n},\r\n{\r\n\tid:10,\r\n\tname:`Bhanuja Aggarwal`,\r\n\tuserid:'@bhanujaaggarwal',\r\n\tinsta:`https://www.instagram.com/bhanujaaggarwal/?hl=en`\r\n}\r\n\r\n]","import React,{ Component } from 'react';\r\nimport CardList from './CardList.js';\r\nimport SearchBox from './SearchBox.js';\r\nimport { kittens } from './kittens.js';\r\n\r\nclass App extends Component\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper()\r\n\t\tthis.state=\r\n\t\t{\r\n\t\t\tkittens:kittens,\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\tChangeOnSearch = (event)=>\r\n\t{\tthis.setState({ searchfield:event.target.value })\r\n\t\t\r\n\t}\r\n\trender()\r\n\t{\tconst filteredkittens=this.state.kittens.filter(kittens=>{\treturn kittens.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\t})\r\n\t\tif(this.state.kittens===0){\r\n\t\t\treturn <h1>LOADING...</h1>\r\n\t\t}\r\n\t\telse{\r\n\t\treturn(\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>Kitty Hostelers</h1>\r\n\t\t<SearchBox ChangeSearch={this.ChangeOnSearch}/>\r\n\t\t<CardList kittens={filteredkittens} />\r\n\t\t</div>\r\n\t);}\r\n\t}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport 'tachyons';\r\nimport './App.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}